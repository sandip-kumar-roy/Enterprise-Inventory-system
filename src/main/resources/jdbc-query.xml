<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd">
<util:map id="mapQueries" map-class="java.util.HashMap">

	<entry key="GET.PROFILE.BY.USERID">
       <value>
       	<![CDATA[
			SELECT 
			    PROFILE.*  
			FROM PROFILE 
			INNER JOIN USERS ON PROFILE.PROFILE_ID = USERS.PROFILE_ID 
			WHERE USERS.USER_ID = ?
        	]]>
        </value>
	</entry>
   
   	<entry key="FIND.PERMISSION.BY.USERNAME">
       <value>
       	<![CDATA[
			SELECT 
			    PERMISSION.* 
			FROM USERS 
			INNER JOIN ROLE ON USERS.FK_ROLE_ID = ROLE.ROLE_ID 
			INNER JOIN ROLE_MAP_PERMISSION ON ROLE.ROLE_ID = ROLE_MAP_PERMISSION.ROLE_ID 
			INNER JOIN PERMISSION ON ROLE_MAP_PERMISSION.PER_ID = PERMISSION.PER_ID 
			WHERE USERS.USERNAME = :USERNAME 
        	]]>
        </value>
   	</entry>
   
    <entry key="GET.DETAIL.BY.USERNAME">
        <value>
       	<![CDATA[
			SELECT 
			    USERS.USERNAME , 
			    USERS.PASSWORD , 
			    ROLE.ROLE_ID , 
			    ROLE.ROLE_CODE , 
			    ROLE.ROLE_NAME , 
			    USERS.ENABLED , 
			    USERS.ACCOUNT_NON_LOCKED , 
			    USERS.ACCOUNT_NON_EXPIRED , 
			    USERS.ACCOUNT_EXPIRED_DATE , 
			    USERS.ACCOUNT_LOCKED_DATE , 
			    CREDENTIALS_EXPIRED_DATE , 
			    USERS.CREDENTIALS_NON_EXPIRED , 
			    USERS.FIRST_LOGIN , 
			    USERS.MAX_SESSION , 
			    PROFILE.PROFILE_IMAGE , 
			    PROFILE.FIRST_NAME , 
			    PROFILE.LAST_NAME ,
			    PROFILE.BRANCH_CODE
			FROM USERS INNER JOIN PROFILE ON USERS.PROFILE_ID = PROFILE.PROFILE_ID 
			INNER JOIN ROLE ON USERS.FK_ROLE_ID = ROLE.ROLE_ID 
			WHERE USERS.USERNAME = :USERNAME 
        	]]>
        </value>
   </entry>
    
   <entry key="FIND.DETAIL.BY.USERID">
        <value>
       	<![CDATA[
			SELECT 
			    USERS.USER_ID , 
			    USERS.USERNAME , 
			    USERS.PASSWORD , 
			    ROLE.ROLE_ID , 
			    ROLE.ROLE_CODE , 
			    ROLE.ROLE_NAME , 
			    USERS.ENABLED , 
			    USERS.ACCOUNT_NON_LOCKED ,
			    USERS.ACCOUNT_NON_EXPIRED , 
			    USERS.ACCOUNT_EXPIRED_DATE , 
			    CREDENTIALS_EXPIRED_DATE , 
			    USERS.CREDENTIALS_NON_EXPIRED , 
			    USERS.FIRST_LOGIN , 
			    USERS.MAX_SESSION , 
			    PROFILE.CITIZEN_ID , 
			    PROFILE.TEL ,
			    PROFILE.FIRST_NAME ,
			    PROFILE.EMAIL , 
			    PROFILE.SUB_DISTRICT_CODE ,
			    PROFILE.LAST_NAME , 
			    PROVINCES.PROVINCE_ID , 
			    PROVINCES.PROVINCE_CODE , 
			    PROVINCES.PROVINCE_NAME_TH ,
			    DISTRICTS.DISTRICT_ID , 
			    DISTRICTS.DISTRICT_CODE , 
			    DISTRICTS.DISTRICT_NAME_TH ,
			    SUBDISTRICTS.SUBDISTRICT_ID ,
			    SUBDISTRICTS.SUBDISTRICT_NAME_TH , 
			    POSTCODE.ZIPCODE 
			FROM USERS 
			INNER JOIN PROFILE ON USERS.PROFILE_ID = PROFILE.PROFILE_ID 
			INNER JOIN ROLE ON USERS.FK_ROLE_ID = ROLE.ROLE_ID 
			LEFT JOIN SUBDISTRICTS ON PROFILE.SUB_DISTRICT_CODE = SUBDISTRICTS.SUBDISTRICT_CODE 
			LEFT JOIN DISTRICTS ON SUBDISTRICTS.DISTRICT_CODE = DISTRICTS.DISTRICT_CODE 
			LEFT JOIN PROVINCES ON DISTRICTS.PROVINCE_CODE = PROVINCES.PROVINCE_CODE 
			LEFT JOIN POSTCODE ON SUBDISTRICTS.SUBDISTRICT_CODE = POSTCODE.SUB_DISTRICT_CODE 
			WHERE USERS.USER_ID = :userId
        ]]>
        </value>
   </entry>
   
   <entry key="FIND.DETAIL.BY.CRITERIA">
        <value>
       	<![CDATA[
			SELECT 
			    USERS.USER_ID,
			    USERS.USERNAME,
			    USERS.FIRST_LOGIN,
			    USERS.ENABLED,
			    USERS.ACCOUNT_NON_LOCKED,
			    USERS.ACCOUNT_NON_EXPIRED,
			    USERS.CREDENTIALS_NON_EXPIRED,
			    USERS.CREDENTIALS_EXPIRED_DATE,
			    PROFILE.FIRST_NAME,
			    PROFILE.LAST_NAME,
			    PROFILE.EMAIL,
			    PROFILE.TEL,
			    PROFILE_IMAGE,
			    ROLE.ROLE_CODE,
			    ROLE.ROLE_ID,
			    ROLE.ROLE_NAME,
			    ROLE.ROLE_DESC,
			    BANK_BRANCH.BRANCH_NAME
			FROM USERS 
			INNER JOIN PROFILE ON USERS.PROFILE_ID = PROFILE.PROFILE_ID
			INNER JOIN ROLE ON USERS.FK_ROLE_ID = ROLE.ROLE_ID 
			INNER JOIN BANK_BRANCH ON BANK_BRANCH.BRANCH_CODE = PROFILE.BRANCH_CODE 
			WHERE USERS.USER_ID IS NOT NULL
        ]]>
        </value>
	</entry>
   
    <entry key="FIND.DETAIL.BRANCH.BY.CRITERIA">
        <value>
       	<![CDATA[
			SELECT 
			    USERS.USER_ID,
			    USERS.USERNAME,
			    USERS.FIRST_LOGIN,
			    USERS.ENABLED,
			    USERS.ACCOUNT_NON_LOCKED,
			    USERS.ACCOUNT_NON_EXPIRED,
			    USERS.CREDENTIALS_NON_EXPIRED,
			    USERS.CREDENTIALS_EXPIRED_DATE,
			    PROFILE.FIRST_NAME,
			    PROFILE.LAST_NAME,
			    PROFILE.EMAIL,
			    PROFILE.TEL,
			    PROFILE_IMAGE,
			    ROLE.ROLE_CODE,
			    ROLE.ROLE_ID,
			    ROLE.ROLE_NAME,
			    ROLE.ROLE_DESC,
			    BANK_BRANCH.BRANCH_NAME
			FROM USERS 
			INNER JOIN PROFILE ON USERS.PROFILE_ID = PROFILE.PROFILE_ID
			INNER JOIN ROLE ON USERS.FK_ROLE_ID = ROLE.ROLE_ID 
			INNER JOIN BANK_BRANCH ON BANK_BRANCH.BRANCH_CODE = PROFILE.BRANCH_CODE 
			WHERE USERS.USER_ID IS NOT NULL
			AND PROFILE.BRANCH_CODE = ?
        ]]>
        </value>
    </entry>
   
    <entry key="FIND.USER.BY.EMAIL">
        <value>
       	<![CDATA[
       		SELECT 
			    USERS.* 
			FROM USERS 
			INNER JOIN PROFILE ON USERS.PROFILE_ID = PROFILE.PROFILE_ID 
			WHERE PROFILE.EMAIL = :EMAIL 
        ]]>
        </value>
   </entry>
   
    <entry key="FIND.SUBDISTRICT.BY.TERM">
        <value>
       	<![CDATA[
       		SELECT 
			    SUBDISTRICTS.* ,
			    POSTCODE.ZIPCODE 
			FROM SUBDISTRICTS 
			LEFT JOIN POSTCODE ON SUBDISTRICTS.SUBDISTRICT_CODE = POSTCODE.SUB_DISTRICT_CODE 
			WHERE SUBDISTRICTS.DISTRICT_CODE = :DISTRICT_CODE  
			AND SUBDISTRICTS.SUBDISTRICT_NAME_TH LIKE :SUBDISTRICT_NAME_TH
        ]]>
        </value>
   </entry>
   
   <entry key="FIND.COUNT.VILLAGE.BY.DISTRICTCODE">
        <value>
       	<![CDATA[
       		SELECT 
			    SUBDISTRICTS.SUBDISTRICT_CODE,
			    SUBDISTRICTS.SUBDISTRICT_NAME_TH, 
			    COUNT(*) AS COUNT_VILLAGE  
			FROM PROVINCES 
			INNER JOIN DISTRICTS ON PROVINCES.PROVINCE_CODE = DISTRICTS.PROVINCE_CODE 
			INNER JOIN SUBDISTRICTS ON DISTRICTS.DISTRICT_CODE = SUBDISTRICTS.DISTRICT_CODE 
			INNER JOIN VILLAGES ON SUBDISTRICTS.SUBDISTRICT_CODE = VILLAGES.SUB_DISTRICT_CODE 
			WHERE DISTRICTS.DISTRICT_CODE = :DISTRICT_CODE  
			GROUP BY SUBDISTRICTS.SUBDISTRICT_CODE,SUBDISTRICTS.SUBDISTRICT_NAME_TH
        ]]>
        </value>
   </entry>
   
   <entry key="FIND.DISTRICT.BY.PROVINCECODE">
        <value>
       	<![CDATA[
       		SELECT 
			    * 
			FROM DISTRICTS 
			WHERE PROVINCE_CODE = :PROVINCE_CODE  
			AND (DISTRICT_NAME_TH LIKE :DISTRICT_NAME_TH  OR DISTRICT_NAME_EN LIKE :DISTRICT_NAME_TH )
        ]]>
        </value>
   </entry>
    
   <entry key="FIND.PERMISSION.BY.ROLEID">
        <value>
       	<![CDATA[
       		SELECT 
			    P.PER_ID,
			    P.PER_CODE,
			    P.PER_NAME,
			    P.CREATE_BY,
			    P.CREATE_DATE,
			    P.UPDATE_BY,
			    P.UPDATE_DATE,
			    CASE WHEN U.PER_CODE IS NULL THEN 0 ELSE 1 END AS HAS_PERCODE
			FROM PERMISSION P
			LEFT JOIN (
			    SELECT
			        P.PER_CODE
			    FROM  ROLE R                 
			    INNER JOIN ROLE_MAP_PERMISSION RMP  ON R.ROLE_ID = RMP.ROLE_ID
			    INNER JOIN PERMISSION P             ON RMP.PER_ID = P.PER_ID
			    WHERE R.ROLE_ID = :ROLE_ID 
			) U ON P.PER_CODE = U.PER_CODE
        ]]>
        </value>
   </entry>
   
   <entry key="FIND.ROLE">
        <value>
       	<![CDATA[
       		SELECT 
			    ROLE_ID,
			    ROLE_CODE,
			    ROLE_NAME,
			    ROLE_DESC,
			    CREATE_DATE 
			FROM ROLE 
			WHERE ROLE_ID IS NOT NULL
        ]]>
        </value>
   </entry>
   
   	<entry key="GET.PASSWORD.BY.UID.AND.TOKEN">
       <value>
       	<![CDATA[
			SELECT * 
			FROM FORGOT_PASSWORD 
			WHERE TOKEN = :TOKEN  
			AND USERID = :USERID  
			AND IS_RESET = 0 
        ]]>
        </value>
	</entry>
    
    <entry key="GET.USER.BY.USERID.AND.BRANCHCODE">
        <value>
       	<![CDATA[
			SELECT
			    *
			FROM USERS U
			INNER JOIN PROFILE P ON U.PROFILE_ID = P.PROFILE_ID
			WHERE U.USER_ID = :USER_ID
			AND P.BRANCH_CODE = :BRANCH_CODE
        ]]>
        </value>
	</entry>
	
	<entry key="GET.USER.BY.USERNAME.AND.BRANCHCODE">
        <value>
       	<![CDATA[
			SELECT
			    *
			FROM USERS U
			INNER JOIN PROFILE P ON U.PROFILE_ID = P.PROFILE_ID
			WHERE U.USERNAME = :USERNAME
			AND P.BRANCH_CODE = :BRANCH_CODE
        ]]>
        </value>
	</entry>
	
	<entry key="GET.MESSAGE.BY.CODE">
        <value>
       	<![CDATA[
			SELECT
			    *
			FROM VALIDATE_MESSAGE
			WHERE MSG_CODE = :MSG_CODE
        ]]>
        </value>
	</entry>
	
</util:map>
</beans>